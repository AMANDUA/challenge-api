{
	"info": {
		"_postman_id": "53ff284b-390c-4f4a-87dd-59d12ae78451",
		"name": "topcoder-challenge-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Challenges",
			"item": [
				{
					"name": "search challenge",
					"item": [
						{
							"name": "search challenge",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challenges?name=test-&perPage=2&createdBy=Hohosky&createdDateStart=2019-02-22T00:00:00Z&createdDateEnd=2019-03-22T00:00:00Z",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges"
									],
									"query": [
										{
											"key": "description",
											"value": "ption",
											"disabled": true
										},
										{
											"key": "name",
											"value": "test-"
										},
										{
											"key": "perPage",
											"value": "2"
										},
										{
											"key": "createdBy",
											"value": "Hohosky"
										},
										{
											"key": "createdDateStart",
											"value": "2019-02-22T00:00:00Z"
										},
										{
											"key": "createdDateEnd",
											"value": "2019-03-22T00:00:00Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search challenge invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "475c83d7-16fa-4e68-a5ce-5021b0ba1af2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challenges?invalid=test-",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges"
									],
									"query": [
										{
											"key": "invalid",
											"value": "test-"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create challenge",
					"item": [
						{
							"name": "create challenge by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"CHALLENGE_ID1\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID1}}\",\n\t\"track\": \"test-track\",\n\t\"name\": \"test-create\",\n\t\"description\": \"test-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "create challenge by copilot",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"CHALLENGE_ID2\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID2}}\",\n\t\"track\": \"test-track-1\",\n\t\"name\": \"test-create-copilot\",\n\t\"description\": \"test-description\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID3}}\",\n\t\t\t\"value\": \"value3\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID4}}\",\n\t\t\t\"value\": \"value4\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create challenge invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": 12345,\n\t\"track\": \"test-track\",\n\t\"name\": \"test-create\",\n\t\"description\": \"test-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create challenge by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID1}}\",\n\t\"track\": \"test-track\",\n\t\"name\": \"test-create\",\n\t\"description\": \"test-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update challenge",
					"item": [
						{
							"name": "update challenge 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID2}}\",\n\t\"track\": \"update-track\",\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID1}}\",\n\t\t\t\"value\": \"value1\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID2}}\",\n\t\t\t\"value\": \"value2\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update challenge 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID4}}\",\n\t\"track\": \"update-track-1\",\n\t\"name\": \"update-name-1\",\n\t\"description\": \"update-description-1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge by different copilot 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID4}}\",\n\t\"track\": \"update-track-1\",\n\t\"name\": \"update-name-1\",\n\t\"description\": \"update-description-1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID2}}\",\n\t\"track\": \"update-track\",\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID1}}\",\n\t\t\t\"value\": \"value1\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID2}}\",\n\t\t\t\"value\": \"value2\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/not-found",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"not-found"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"invalid\": 123,\n\t\"track\": \"update-track\",\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID1}}\",\n\t\t\t\"value\": \"value1\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID2}}\",\n\t\t\t\"value\": \"value2\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID4}}\",\n\t\"track\": \"update-track-1\",\n\t\"name\": \"update-name-1\",\n\t\"description\": \"update-description-1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "partial update challenge",
					"item": [
						{
							"name": "partial update challenge 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID4}}\",\n\t\"track\": \"update-new-track\",\n\t\"name\": \"update-name\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partial update challenge 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-new-name-1\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID5}}\",\n\t\t\t\"value\": \"value5\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge by different copilot 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-new-name-1\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID5}}\",\n\t\t\t\"value\": \"value5\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"typeId\": \"{{TEST_TYPE_ID4}}\",\n\t\"track\": \"update-new-track\",\n\t\"name\": \"update-name\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/not-found",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"not-found"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"invalid\": \"{{TEST_TYPE_ID4}}\",\n\t\"track\": \"update-new-track\",\n\t\"name\": \"update-name\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03483bad-dfb2-45d1-bf42-35dd3bd46dad",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-new-name-1\",\n\t\"challengeSettings\": [\n\t\t{\n\t\t\t\"type\": \"{{TEST_SETTING_ID5}}\",\n\t\t\t\"value\": \"value5\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get challenge",
					"item": [
						{
							"name": "get challenge 1",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenge 2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challenges/{{CHALLENGE_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"{{CHALLENGE_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenge not found 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d24e0eab-d954-4abb-8444-8ef159337f07",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challenges/not-found",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challenges",
										"not-found"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "ChallengeTypes",
			"item": [
				{
					"name": "search challenge types",
					"item": [
						{
							"name": "search challenge types 1",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeTypes?name=-name-&description=cri&isActive=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									],
									"query": [
										{
											"key": "name",
											"value": "-name-"
										},
										{
											"key": "description",
											"value": "cri"
										},
										{
											"key": "isActive",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search challenge types 2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeTypes?isActive=true&page=2&perPage=2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									],
									"query": [
										{
											"key": "isActive",
											"value": "true"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "perPage",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search challenge types invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e183d38-425d-433b-8487-6c21b9a5795c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeTypes?invalid=test",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									],
									"query": [
										{
											"key": "invalid",
											"value": "test"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create challenge type",
					"item": [
						{
							"name": "create by copilot",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"TYPEA_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{copilot1_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-copilot\",\n\t\"description\": \"test-value\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"TYPEB_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-admin\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create without token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-copilot\",\n\t\"description\": \"test-value\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create via user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-copilot\",\n\t\"description\": \"test-value\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create with invalid token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-copilot\",\n\t\"description\": \"test-value\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create missing parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"failure\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create duplicate name 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986df394-b29e-42a6-83da-592eb3db1442",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"type-NAME-1\",\n\t\"description\": \"test-value\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get challenge type",
					"item": [
						{
							"name": "get challenge type 1",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenge type 2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenge type 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed8483b2-a9f5-49ac-9d9f-3cfd2a1872fc",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/not-found",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"not-found"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "partial update challenge type",
					"item": [
						{
							"name": "partial update challenge type 1",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partial update challenge type 2 Copy",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{copilot1_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"add-description\",\n\t\"isActive\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge type with invalid token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27836ef1-3d48-4d67-a2bf-63a93d7ca189",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge type via user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "87677a37-622e-440c-ba16-edf6f3b58e3a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge type 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f069a8a-ed67-4364-b10a-825b3b8ab828",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name\",\n\t\"description\": \"update-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/not-found",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"not-found"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge type invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cdf6f5f-d4d3-4d01-9ecd-856c2e03eb20",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 1234,\n\t\"description\": \"update-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure partial update challenge type duplicate name 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cdf6f5f-d4d3-4d01-9ecd-856c2e03eb20",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"TYPE-name-1\",\n\t\"description\": \"update-description\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update challenge type",
					"item": [
						{
							"name": "update challenge type 1",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-1\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update challenge type 2",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot2_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-2\",\n\t\"description\": \"update-description2\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge type without token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867406cc-7f20-4aa4-b3d0-40082ba72d7d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-2\",\n\t\"description\": \"update-description2\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge type via user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867406cc-7f20-4aa4-b3d0-40082ba72d7d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{user_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-2\",\n\t\"description\": \"update-description2\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge type 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867406cc-7f20-4aa4-b3d0-40082ba72d7d",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-2\",\n\t\"description\": \"update-description2\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/not-found",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"not-found"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge type missing parameter 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867406cc-7f20-4aa4-b3d0-40082ba72d7d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"update-description2\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge type invalid parameter 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867406cc-7f20-4aa4-b3d0-40082ba72d7d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test-name\",\n\t\"description\": 12345,\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge type duplicate name 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867406cc-7f20-4aa4-b3d0-40082ba72d7d",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"TYPE-name-2\",\n\t\"description\": \"description\",\n\t\"isActive\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeTypes/{{TYPEB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeTypes",
										"{{TYPEB_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "ChallengeSettings",
			"item": [
				{
					"name": "search challenge setting",
					"item": [
						{
							"name": "search challenge setting",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{copilot1_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings?name=-NAME-&page=2&perPage=2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									],
									"query": [
										{
											"key": "name",
											"value": "-NAME-"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "perPage",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search challenge setting by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45e8dbe3-65f4-4657-a194-7b3c996c0173",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings?name=-NAME-&page=2&perPage=2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									],
									"query": [
										{
											"key": "name",
											"value": "-NAME-"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "perPage",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search challenge setting without token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45e8dbe3-65f4-4657-a194-7b3c996c0173",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings?name=-NAME-&page=2&perPage=2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									],
									"query": [
										{
											"key": "name",
											"value": "-NAME-"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "perPage",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search challenge setting invalid parameters 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12584f05-a23b-4b99-97b7-ed1c3c32f3ea",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{copilot1_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings?invalid=-NAME-&page=2&perPage=2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									],
									"query": [
										{
											"key": "invalid",
											"value": "-NAME-"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "perPage",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create challenge setting",
					"item": [
						{
							"name": "create by copilot",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"SETTINGA_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{copilot1_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-copilot\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    pm.environment.set(\"SETTINGB_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-admin\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create with invalid token 1 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{m2m_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-invalid-token\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create with invalid token 2 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{expire_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-invalid-token\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create with invalid token 3 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-invalid\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-admin\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create without token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"create-by-admin\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create invalid parameter 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"invalid\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create duplicate name 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e1d09d-b72f-4809-ac29-c458b90cb631",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"setting-NAME-1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get challenge setting",
					"item": [
						{
							"name": "get challenge setting 1",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{copilot2_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get challenge setting 2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenge setting by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8943e46-a557-4c4c-9383-dfbdda50070d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{user_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenge setting without token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8943e46-a557-4c4c-9383-dfbdda50070d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get challenge setting 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8943e46-a557-4c4c-9383-dfbdda50070d",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/not-founded",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"not-founded"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update challenge setting",
					"item": [
						{
							"name": "update challenge setting 1",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{copilot1_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGA_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update challenge setting 2",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-NAME2\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update challenge setting 2 again",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name2\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge setting without token 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6949e508-47fd-4c66-b51a-f8da8a78879d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-failure\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge setting by user 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6949e508-47fd-4c66-b51a-f8da8a78879d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{user_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-name-failure\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGB_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge setting 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c321bdf-37fe-40ec-8f71-16142282d071",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"update-NAME2\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/not-founded",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"not-founded"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update challenge setting duplicate name 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c321bdf-37fe-40ec-8f71-16142282d071",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"setting-NAME-2\"\n}"
								},
								"url": {
									"raw": "{{URL}}/challengeSettings/{{SETTINGA_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"challengeSettings",
										"{{SETTINGA_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "AuditLogs",
			"item": [
				{
					"name": "search 1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/challengeAuditLogs?challengeId={{CHALLENGE_ID1}}&createdDateStart=2019-02-22T00:00:00Z&createdDateEnd=2019-03-22T00:00:00Z&createdBy=tonyj",
							"host": [
								"{{URL}}"
							],
							"path": [
								"challengeAuditLogs"
							],
							"query": [
								{
									"key": "challengeId",
									"value": "{{CHALLENGE_ID1}}"
								},
								{
									"key": "fieldName",
									"value": "n",
									"disabled": true
								},
								{
									"key": "createdDateStart",
									"value": "2019-02-22T00:00:00Z"
								},
								{
									"key": "createdDateEnd",
									"value": "2019-03-22T00:00:00Z"
								},
								{
									"key": "createdBy",
									"value": "tonyj"
								},
								{
									"key": "perPage",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search 2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/challengeAuditLogs?challengeId={{CHALLENGE_ID2}}&createdDateStart=2019-02-22T00:00:00Z&createdDateEnd=2019-03-22T00:00:00Z&createdBy=ghostar",
							"host": [
								"{{URL}}"
							],
							"path": [
								"challengeAuditLogs"
							],
							"query": [
								{
									"key": "challengeId",
									"value": "{{CHALLENGE_ID2}}"
								},
								{
									"key": "fieldName",
									"value": "n",
									"disabled": true
								},
								{
									"key": "createdDateStart",
									"value": "2019-02-22T00:00:00Z"
								},
								{
									"key": "createdDateEnd",
									"value": "2019-03-22T00:00:00Z"
								},
								{
									"key": "createdBy",
									"value": "ghostar"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "failure search by user 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9f7cf4a-e004-4e2a-a045-19993336fb11",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{user_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/challengeAuditLogs?challengeId={{CHALLENGE_ID1}}&fieldName=n&createdDateStart=2019-02-22T00:00:00Z&createdDateEnd=2019-03-22T00:00:00Z&createdBy=tonyj",
							"host": [
								"{{URL}}"
							],
							"path": [
								"challengeAuditLogs"
							],
							"query": [
								{
									"key": "challengeId",
									"value": "{{CHALLENGE_ID1}}"
								},
								{
									"key": "fieldName",
									"value": "n"
								},
								{
									"key": "createdDateStart",
									"value": "2019-02-22T00:00:00Z"
								},
								{
									"key": "createdDateEnd",
									"value": "2019-03-22T00:00:00Z"
								},
								{
									"key": "createdBy",
									"value": "tonyj"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "failure search with expired token 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9f7cf4a-e004-4e2a-a045-19993336fb11",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{expire_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/challengeAuditLogs?challengeId={{CHALLENGE_ID1}}&fieldName=n&createdDateStart=2019-02-22T00:00:00Z&createdDateEnd=2019-03-22T00:00:00Z&createdBy=tonyj",
							"host": [
								"{{URL}}"
							],
							"path": [
								"challengeAuditLogs"
							],
							"query": [
								{
									"key": "challengeId",
									"value": "{{CHALLENGE_ID1}}"
								},
								{
									"key": "fieldName",
									"value": "n"
								},
								{
									"key": "createdDateStart",
									"value": "2019-02-22T00:00:00Z"
								},
								{
									"key": "createdDateEnd",
									"value": "2019-03-22T00:00:00Z"
								},
								{
									"key": "createdBy",
									"value": "tonyj"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "failure search invalid parameter 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcf77a12-df13-4175-a964-3a88386896a3",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/challengeAuditLogs?challengeId={{CHALLENGE_ID1}}&invalid=n&createdDateStart=2019-02-22T00:00:00Z&createdDateEnd=2019-03-22T00:00:00Z&createdBy=tonyj",
							"host": [
								"{{URL}}"
							],
							"path": [
								"challengeAuditLogs"
							],
							"query": [
								{
									"key": "challengeId",
									"value": "{{CHALLENGE_ID1}}"
								},
								{
									"key": "invalid",
									"value": "n"
								},
								{
									"key": "createdDateStart",
									"value": "2019-02-22T00:00:00Z"
								},
								{
									"key": "createdDateEnd",
									"value": "2019-03-22T00:00:00Z"
								},
								{
									"key": "createdBy",
									"value": "tonyj"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}